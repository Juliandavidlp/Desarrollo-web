/* Selectores avanzados y Animaciones 

● Selectores avanzados.
● Animaciones con CSS.
● Incorporación de transformaciones y transiciones a elementos.
● Introducción Responsive Web Design

Selectores avanzados

Utilizan combinadores, signos gráficos que establecen la relación entre los elementos y
permiten hacer una selección específica:


Agrupado (, -coma)
Se utiliza cuando varios elementos comparten una serie de declaraciones iguales, se aplican 
las reglas Css a los selectores involucrados. Por ejemplo:

p, a, div {
    Reglas Css
    }

Descendiente (espacio)
Apunta a elementos contenidos dentro de otro en la estructura del documento, sin importar
la profundidad o  los descendientes interpuestos entre ellos. Por ejemplo:

div p {
    Reglas Css
    }

Hijos directos > (mayor)
Selecciona los elementos que sean hijos directos del contenedor padre, descartando nietos y sucesivos.

span > a {
    Reglas Css
    }

Hermano adyacente + (signo más)
Aplica estilos a elementos que siguen inmediatamente a otros. Deben tener el mismo elemento padre y ser 
adyacentes. Por ejemplo:

div + p {
    Reglas Css
    }

General de hermanos ~ (tilde de la ñ)
Selecciona los elementos hermanos del especificado, sin necesidad de que sean adyacentes. 
Por ej.:

div ~ p {
    Reglas Css
    }


    Pseudoclases

Una pseudoclase es un selector que marca los elementos que están en un estado específico o tienen
un comportamiento determinado. Todas las pseudoclases se denominan mediante una palabra precedida 
por dos puntos y se comportan del mismo modo. Afectan un fragmento del documento que está 
en un estado determinado y se comportan como si se hubiera añadido una clase a su HTML.

:first-child

Esta pseudoclase modifica el estilo del primer elemento de un grupo de elementos hermanos 
dentro de un contenedor, es decir “el primer hijo de su padre”. Por ejemplo:

A partir de:
                <div>
                    <p> Párrafo 1 </p>
                    <p> Párrafo 2 </p>
                    <p> Párrafo 3 </p>
                </div>

p:first-child {
    color: red;
    }

:last-child

Se utiliza para representar al último elemento entre un grupo de elementos hermanos 
dentro de un contenedor, es decir “el último hijo de su padre”. Entonces,
dado el mismo contenedor, por ejemplo:

p:last-child {
    color: blue;
    }

:nth-child(n)

El selector coincide con cada elemento que es el n-ésimo hijo, independientemente del tipo
y de su padre. N puede ser un número, una palabra clave o una fórmula. Dado el mismo contenedor,
por ejemplo:

p:nth-child(2) {
 background: cyan;
    }

Más info: https://www.w3schools.com/cssref/tryit.php?filename=trycss3_last-child
En el ejemplo siguiente, vemos como de la lista se seleccionan primero los
elementos 3, 6 y 9, y luego los que son pares:
*/

<ol>
 <li> Item 1</li>
 <li> Item 2</li>
 <li> Item 3</li>
 <li> Item 4</li>
 <li> Item 5</li>
 <li> Item 6</li>
 <li> Item 7</li>
 <li> Item 8</li>
 <li> Item 9</li>
</ol>

li:nth-child(3n) { 
     background: lightskyblue;
    }

li:nth-child(2n) {
     background: lightgreen;
}

/* Más ejemplos: */
li:nth-child(3n+4) {
    background:lightcoral;
    }

/*Pares*/
li:nth-child(even) {background: lightcoral;}

/*Impares*/
li:nth-child(odd) {background: lightgreen;}


/*Elementos del mismo tipo

En los casos anteriores, seleccionamos elementos independientemente de que elemento sea. 
Simplemente, hacemos caso a la posición donde está ubicado. Si queremos hacer referencia
sólo a elementos del mismo tipo, utilizaremos los selectores siguientes, 
análogosa los anteriores, pero haciendo referencia sólo a 
elementos del mismo tipo:

:first-of-type Primer elemento hijo (de su mismo tipo).
:last-of-type Último elemento hijo (de su mismo tipo).
:nth-of-type(n) N-elemento hijo (de su mismo tipo).
:nth-last-oftype(n) N-elemento hijo (de su mismo tipo) partiendo desde el final.

Hijos únicos

Existen también varias pseudoclases para la gestión de hijos únicos. Son las siguientes:

:only-child Elemento que es hijo único (de cualquier tipo).
:only-of-type Elemento que es hijo único (de su mismo tipo).
:empty Elemento vacío (sin hijos, ni texto).

La propiedad :only-child nos proporciona un método para aplicar estilo a aquellos
elementos que sean el único hijo de su elemento padre. Además, como ha ocurrido
anteriormente, también existe la pseudoclase :only-of-type que es equivalente al
anteriorpero sólo para elementos del mismo tipo, es decir, que puede ser que no sea el
único elemento hijo, pero sí el único de su tipo.

Muy relacionada está también la pseudoclase :empty, que permite seleccionar los
elementos que estén vacíos. Ojo con esto, ya que un elemento que contenga comentarios
HTML <!> la pseudoclase :empty lo detectará como vacío, pero si contiene espacios en
blanco, no.

Pseudoclases para hipervínculos

Se aplican a etiquetas <a>, pero se pueden usar en otros elementos,
pueden tener cuatro estados: 

• :link se refiere a un enlace que todavía no ha sido visitado.
• :visited se refiere a un enlace que fue visitado.
• :hover se refiere a un elemento sobre el que se coloca el puntero del mouse.
• :active se refiere a cualquier elemento que fue activado por el usuario.

Pseudoclases de interacción

Existen pseudoclases orientadas principalmente a los campos de formulario de
páginas webs y la interacción del usuario con ellos, veamos otro par interesante:

• :focus Aplica estilos cuando el elemento tiene el foco.
• :checked Aplica estilos cuando la casilla está seleccionada.

Por ejemplo:
input:checked + span {
    color: green;
    }

El ejemplo añade el selector hermano + para darle formato al <span> que contiene el texto 
y se encuentra colocado a continuación de la casilla <input>. De esta forma, los textos
que hayan sido seleccionados, se mostrarán en verde.

Nota: Para más información chequear el archivo pdf, hay pseudoclases de validación y activación
muy útiles para estilar formularios.

Pseudoclases de negación

Existe una pseudoclase muy útil, denominada pseudoclase de negación. Permite seleccionar todos 
los elementos que no cumplan los selectores indicados entre paréntesis. Por ejemplo:*/

p:not(.general) {
    border: 1px solid #DDD; padding: 8px;
    background: #FFF;
    }

